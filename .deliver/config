APP="rumbrella"
RELEASE_DIR="$BUILD_AT/apps/$APP/rel/$APP"
MODE="debug"
VERBOSE=true

BUILD_HOST="54.153.13.201"
BUILD_CMD="mix"
BUILD_USER="builder"
BUILD_AT="/tmp/edeliver/rumbrella/builds"

STAGING_HOSTS="52.53.159.106"
STAGING_USER="deployer"
TEST_AT="/home/rumbrella"

RELEASE_CMD="mix"
# PRODUCTION_HOSTS="deploy1.acme.org deploy2.acme.org" # deploy / production hosts separated by space
# PRODUCTION_USER="production" # local user at deploy hosts
# DELIVER_TO="/opt/my-erlang-app" # deploy directory on production hosts

# For *Phoenix* projects, symlink prod.secret.exs to our tmp source
pre_erlang_get_and_update_deps() {
  local _prod_secret_path="/home/builder/prod.secret.exs"
  if [ "$TARGET_MIX_ENV" = "prod" ]; then
    __sync_remote "
      ln -sfn '$_prod_secret_path' '$BUILD_AT/apps/rumbl/config/prod.secret.exs'
    "
  fi
  local _staging_secret_path="/home/builder/staging.secret.exs"
  if [ "$TARGET_MIX_ENV" = "staging" ]; then
    __sync_remote "
      ln -sfn '$_staging_secret_path' '$BUILD_AT/apps/rumbl/config/staging.secret.exs'
    "
  fi
}

pre_erlang_clean_compile() {
  status "Preparing assets with: brunch build and phoenix.digest"
  PACKAGE_JSON='package.json'
  __sync_remote "
    # runs the commands on the build host
    [ -f ~/.profile ] && source ~/.profile # load profile (optional)

    # fail if any command fails (recommended)
    set -e

    # enter the build directory on the build host (required)
    cd '$BUILD_AT'

    # iterate each app in umbrella and build assets
    for UMBRELLA_APP in \$(ls -1 apps | grep -v '$APP'); do
      cd \"${BUILD_AT}/apps/\${UMBRELLA_APP}\" $SILENCE

      if [ -f \"${PACKAGE_JSON}\" ]; then
        echo \"Preparing \${UMBRELLA_APP} in umbrella...\" $SILENCE
        mkdir -p priv/static # required by the phoenix.digest task

        # installing npm dependencies
        npm install

        # building brunch
        ./node_modules/brunch/bin/brunch build --production

        # run your custom task
        APP='$APP' MIX_ENV='$TARGET_MIX_ENV' $MIX_CMD phoenix.digest $SILENCE

        #APP=\"\$UMBRELLA_APP\" MIX_ENV='$TARGET_MIX_ENV' mix do deps.get, compile
      fi
    done

    cd '$BUILD_AT'
  "
}
